//General weapon effects
//flash is a 0.25 second event after a weapon is fired
//fire is a single event when weapon is fired
//impact is for weapons impact on something or explode like grenades
//trail is a single event for weapons without projectiles or a constant event when projectile is in motion
//projectile is for rendering the specific projectile


//Bubbles in the water
//input origin
weapon/common/bubbles {
	shader waterbubble
	distance 5+rand*10 {
		size 1 + rand * 2
		random	dir
		addScale origin dir origin 10 * rand
		emitter 1+rand*0.25 {
			alphaFade 0
			origin2 origin2 + lerp * 8
			Sprite
		}
	}
}


weapon/rocket/flash {
	color	1 0.75 0
	size 300 + rand*32
	light
}

weapon/rocket/projectile {
	//Render the rocket
	model		"models/ammo/rocket/rocket.md3"
	dirModel
	
	//Sound generated by the flying rocket
	loopSound	"sound/weapons/rocket/rockfly.wav"
}

weapon/rocket/trail {
	// Set the base yellow color
	color	1 0.75 0

	size	200
	Light

	//The standard smoke puff trail thing
	color	1 1 1
	alpha	0.33
	shader	smokePuff
	rotate	360 * rand
	distance 45 {
		emitter 2 {
			alphaFade	0
			size		8 + lerp * 40
			sprite		cullNear
		}
	}
}

weapon/rocket/impact {
	vibrate 70
	sound	sound/weapons/rocket/rocklx1a.wav
	//Mark on the wall, using direction from parent
	shader gfx/damage/burn_med_mrk
	size	64
	Decal
	
	// Animating sprite of the explosion
	shader rocketExplosion
	size 40
	//Will be the light colour
	color 1 0.75 0
	emitter 1 {
		Sprite
		//size will goto zero after 0.5 of the time
		size 300 * clip(2 - 2*lerp)
		Light
	}
}


weapon/bfg/flash {
	color	1 0.7 1
	size 300 + rand*32
	light
}

weapon/bfg/projectile {
	//ze model
	model		models/weaphits/bfg.md3
	dirModel
	//ze flight sound
	loopSound	"sound/weapons/rocket/rockfly.wav"
}

weapon/bfg/trail {

}

weapon/bfg/impact {
	vibrate 100
	sound	sound/weapons/rocket/rocklx1a.wav
	//Mark on the wall
	shader	gfx/damage/burn_med_mrk
	size	32
	decal

	// Animating sprite of the explosion
	shader bfgExplosion
	size 40
	emitter 0.6 {
		sprite
	}
}


weapon/grenade/flash {
	color	1 0.7 0
	size 300 + rand*32
	light
}

weapon/grenade/projectile {
	//Render the grenade model
	model		"models/ammo/grenade1.md3"
	anglesModel
}

weapon/grenade/trail {
	//The standard smoke puff trail thing
	alpha	0.33
	shader	smokePuff
	angle	360 * rand
	//Emit a sprite every 50 milliseconds
	interval  0.05 {
		emitter 0.700 {
			alphaFade	0
			size		8 + lerp * 32
			sprite		cullNear
		}
	}
}

weapon/grenade/impact {
	vibrate 70
	sound	sound/weapons/rocket/rocklx1a.wav
	//Mark on the wall, using direction from parent
	shader gfx/damage/burn_med_mrk
	size	64
	Decal
	
	// Animating sprite of the explosion
	shader grenadeExplosion
	size 40
	//Will be the light colour
	color 1 0.75 0
	emitter 0.6 {
		Sprite
		//size will goto zero after 0.5 of the time
		size 300 * clip(2 - 2*lerp)
		Light
	}
}


weapon/plasma/flash {
	color	0.6 0.6 1
	size 300 + rand*32
	light
}

weapon/plasma/projectile {
	//The sprite for the plasma
	size 16
	shader	sprites/plasma1
	sprite
	//Plasma flying sound
	loopSound	"sound/weapons/plasma/lasfly.wav"
}

weapon/plasma/trail {

}

weapon/plasma/impact {
	vibrate 10
	sound	sound/weapons/plasma/plasmx1a.wav

	shader	plasmaExplosion
	model	models/weaphits/ring02.md3
	//Show the ring impact model on a random rotation around it's direction
	rotate    rand*360
	emitter 0.6 {
		dirModel
	}
	size	24
	shader	gfx/damage/plasma_mrk
	Decal energy
}


weapon/rail/flash {
	color	1 0.6 0
	size 300 + rand*32
	light
}

weapon/rail/impact {
	vibrate 50
	sound	sound/weapons/plasma/plasmx1a.wav

	//The white expanding impact disc
	rotate    rand*360
	shader	railExplosion
	model	models/weaphits/ring02.md3
	emitter 0.6 {
//		dirModel
	}
	//Plasma style impact mark
	size	24
	shader	gfx/damage/plasma_mrk
	Decal energy
}

weapon/rail/trail {
	//Color1 gets set before calling
	//The beam
	size  r_railCoreWidth*0.5
	shader railCore
	shader mme/red
	emitter cg_railTrailTime * 0.001 {
		colorFade 0
		Beam
	}
	shader railDisc
	//color2 is stored in the parent input structure, retrieve it like this
	pushparent color2
	pop color
	if cg_oldrail {
		//Do the rail rings
		size r_railWidth*0.5
		//Rings take their stepsize from the width variable
		width r_railSegmentLength
		emitter cg_railTrailTime * 0.001 {
			colorFade 0.1
			Rings
		}
	} else {
		//Do a spiral around the rail direction
		//Get length in t0
		t0 dir
		normalize dir
		//Create a perpendicular vector to the beam
		perpendicular dir v0
		//Radius around center
		scale v0 v0 5
		size 1.1
		//Set the rotate around angle to start value
		t1 rand*360
		//Go through length of beam in repeat steps
		repeat ( t0 / 5 ) {
			rotatearound v0 dir v1 t1
			//Slightly increase beyond regular 10 it so they don't all line up
			t1 t1 + 10.1
			addScale v1 dir origin loop * t0
			add parentOrigin origin origin
			emitter 0.6 + loop * t1 * 0.0005 {
				//5 radius + 6
				addScale origin v1 origin lerp * 1.2
				colorFade 0.7
				Sprite
			}
		}
	}
}

weapon/shotgun/flash {
	color	1 1 0
	size 300 + rand*32
	light
}

weapon/shotgun/impact {
	vibrate 1
	//Bullet mark on the wall, shotgun ones are smaller
	shader		gfx/damage/bullet_mrk
	size		4
	Decal
	
	//explosion cone with animating shader
	size		1
	shader		bulletExplosion
	model		models/weaphits/bullet.md3
	rotate		rand*360
	emitter 0.6 {
		dirModel
	}

	//a single sprite shooting up from impact surface
	wobble	dir velocity 10 + rand*30
	scale	velocity velocity 200 + rand*50
	size	1 + rand*0.5
	shader	flareShader
	alpha	0.8
	color	1 0.6 0.3
	emitter 0.6 + rand*0.3 {
		moveGravity 200
		colorFade 0.6
		Sprite
	}
}

weapon/shotgun/trail {
//Yep empty and not called
}


weapon/machinegun/impact {
	soundList {
		sound/weapons/machinegun/ric1.wav
		sound/weapons/machinegun/ric2.wav
		sound/weapons/machinegun/ric3.wav
	}
	//Bullet mark on the wall
	shader gfx/damage/bullet_mrk
	size 8
	decal
	
	//explosion cone with animating shader
	size		1
	shader		bulletExplosion
	model		"models/weaphits/bullet.md3"
	rotate		rand*360
	emitter 0.6 {
		dirModel
	}

	//a single sprite shooting up from impact surface
	wobble	dir velocity 10 + rand*30
	scale	velocity velocity 200 + rand*50
	size	2 + rand
	shader	flareShader
	alpha	0.8
	color	1 0.75 0.6
	emitter "0.6 + rand*0.3" {
		moveGravity 200
		colorFade 0.6
		Sprite
	}
}

weapon/machinegun/trail {
//Empty
}

weapon/lightning/flash {
	color	0.6 0.6 1
	size 300 + rand*32
	light
}


//Input origin, dir
weapon/lightning/trail {
	shader "lightningBoltNew"
	//Standard q3 beam size
	size 16
	//The beam is repeated every 45 degrees
	angle 45
	//Draw the beam between origin in direction of
	beam
	//Length of beam in t0
	t0 dir
	//Check if we need to render the impact flash effect thing
	//That means we end before the maximum lightning range
	if ( t0 < 768 ) {
		//Clear the previous shader so it uses the one in the model
		shaderClear
		model "models/weaphits/crackle.md3"	
		size 1
		//Slightly before the endpoint
		addScale origin dir origin ( (t0 - 16 ) / t0 )
		//Just a random model in it's angles
		angles0 rand * 360
		angles1 rand * 360
		angles2 rand * 360
		anglesModel
	}
}


weapon/lightning/impact {
	//random impact sound
	soundList {
		sound/weapons/lightning/lg_hit.wav
		sound/weapons/lightning/lg_hit2.wav
		sound/weapons/lightning/lg_hit3.wav
	}
	//Hole mark shader decal
	shader	gfx/damage/hole_lg_mrk
	size	12
	decal
	
	//a single sprite shooting up from impact surface
	shader	flareShader
	alpha	0.8
	color	0.3 0.3 0.9
	repeat 3 {
		wobble	dir velocity 10 + rand*20
		scale	velocity velocity 200 + rand*50
		size	2 + rand
		emitter "0.6 + rand*0.3" {
			moveGravity 300
			colorFade 0.7
			Sprite
		}
	}
}


weapon/gauntlet/flash {
	color	0.6 0.6 1
	size 300 + rand*32
	light
}


weapon/grapple/flash {
	color	1 0.6 0
	size 300 + rand*32
	light
}


//Render a cheap red beam for the grapple.
weapon/grapple/trail {
	size 10
	shader mme/red
	rotate 60
	beam
}

//Just use a rocket as a standard grapple model
weapon/grapple/projectile {
	//Render a rocket as a grapple?
	model		"models/ammo/rocket/rocket.md3"
	dirModel
}
